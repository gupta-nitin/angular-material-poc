import { async, ComponentFixture, TestBed } from '@angular/core/testing';
import { ReactiveFormsModule } from '@angular/forms';
import { MatExpansionModule } from '@angular/material/expansion';
import { MatInputModule } from '@angular/material/input';
import { MatDatepickerModule } from '@angular/material/datepicker';
import { MatNativeDateModule } from '@angular/material/core';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';

import { BasicFilterComponent } from './basic-filter.component';

describe('BasicFilterComponent', () => {
  let component: BasicFilterComponent;
  let fixture: ComponentFixture<BasicFilterComponent>;

  beforeEach(async(() => {
    TestBed.configureTestingModule({
      declarations: [ BasicFilterComponent ],
      imports: [
        ReactiveFormsModule,
        MatExpansionModule,
        MatInputModule,
        MatDatepickerModule,
        MatNativeDateModule,
        BrowserAnimationsModule
      ]
    })
    .compileComponents();
  }));

  beforeEach(() => {
    fixture = TestBed.createComponent(BasicFilterComponent);
    component = fixture.componentInstance;
    fixture.detectChanges();
  });

  it('should create', () => {
    expect(component).toBeTruthy();
  });

  it('should initialize form correctly', () => {
    expect(component.filterForm).toBeTruthy();
  });

  it('should emit search criteria on submit', () => {
    spyOn(component.searchCriteria, 'emit');

    // Simulate form values
    component.filterForm.setValue({
      contractName: 'Test Contract',
      processingDateTime: '2024-06-30'
    });

    // Trigger submit event
    component.onSubmit(new Event('submit'));

    // Check if searchCriteria.emit was called with the correct arguments
    expect(component.searchCriteria.emit).toHaveBeenCalledWith([
      { key: 'contractName', value: 'Test Contract', operation: 'cn' },
      { key: 'processingDateTime', value: '2024-06-30', operation: 'eq' }
    ]);
  });

  it('should reset form and emit empty search criteria on reset', () => {
    spyOn(component.searchCriteria, 'emit');

    // Simulate form values
    component.filterForm.setValue({
      contractName: 'Test Contract',
      processingDateTime: '2024-06-30'
    });

    // Trigger reset event
    component.onReset(new Event('reset'));

    // Check if form values are cleared
    expect(component.filterForm.value).toEqual({ contractName: '', processingDateTime: '' });

    // Check if searchCriteria.emit was called with empty array
    expect(component.searchCriteria.emit).toHaveBeenCalledWith([]);
  });
});
